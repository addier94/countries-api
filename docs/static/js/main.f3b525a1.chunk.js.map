{"version":3,"sources":["Calling-codes.js","country.js","wrapper.js","country-list.js","input.js","search.js","Region.js","action-list.js","header.js","country-selected.js","country-page.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["CallingCodesStyled","styled","div","CallingCodes","callingCodes","map","item","className","CountryStyled","Country","flag","name","population","region","capital","alpha2Code","nativeName","cioc","history","useHistory","onClick","push","slugify","loading","src","alt","value","displayType","thousandSeparator","WrapperStyled","Wrapper","children","CountryListStyled","CountryList","dispatch","useDispatch","countryListByName","useSelector","state","countryList","filterByRegion","length","coutryFilteredByRegion","console","log","useEffect","fetch","then","response","json","list","type","payload","catch","InputStyled","label","Input","props","SearchStyled","Search","useState","inputValue","setInputValue","placeholder","onChange","e","target","RegionFilterStyled","Region","dropdown","setdropdown","onRegionChange","selectEvent","regionSelected","id","ActionListStyled","ActionList","HeaderStyled","Header","setDarkMode","darkMode","to","CountrySelectedStyled","CountrySelected","subregion","topLevelDomain","currencies","languages","borders","toString","CountryPageStyled","CountryPage","match","DBcountry","find","params","country","setCountry","toLowerCase","data","goBack","store","createStore","action","filter","includes","App","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","removeListener","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f3b525a1.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CallingCodesStyled = styled.div`\n  span {\n    font-size: 0.8em;\n    margin-left: 0.6em;\n    display: flex;\n  }\n  i {\n    color: green;\n  }\n`;\n\nexport const CallingCodes = ({ callingCodes }) => {\n  return (\n    <>\n      <CallingCodesStyled>\n        {callingCodes.map(\n          (item) =>\n            item && (\n              <span key={item}>\n                <i className=\"fas fa-phone-volume\"></i>\n                {item}\n              </span>\n            )\n        )}\n      </CallingCodesStyled>\n    </>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport slugify from \"slugify\";\nimport { CallingCodes as NativeCallingCode } from \"./Calling-codes\";\nimport NumberFormat from \"react-number-format\";\n\nconst CountryStyled = styled.div`\n  cursor: pointer;\n  text-align: left;\n  border-radius: 5px;\n  /* overflow: hidden; */\n  box-shadow: 0 0 7px 2px rgba(0, 0, 0, 0.03);\n  &:hover .details {\n    border-radius: 0 0 5px 5px;\n    border: 1px solid var(--black);\n    border-top: none;\n  }\n  img {\n    width: 100%;\n    height: 160px;\n    object-fit: cover;\n    vertical-align: top;\n    border-radius: 5px 5px 0 0;\n  }\n  .details {\n    padding: 1em 1.2em;\n    border: 1px solid transparent;\n    border-top: none;\n    transition: 0.3s border;\n    background: var(--white);\n  }\n  h2 {\n    margin: 0;\n    font-size: 18px;\n    font-weight: 700;\n    display: flex;\n    justify-content: space-between;\n    line-height: 1.1;\n  }\n  p {\n    font-size: 0.9em;\n    margin-bottom: 0;\n    margin-top: 0.2em;\n  }\n`;\n\nfunction Country({\n  flag,\n  name,\n  population,\n  region,\n  capital,\n  nativeName,\n  cioc,\n  alpha2Code,\n  callingCodes,\n}) {\n  const history = useHistory();\n  function handleClick() {\n    // const id = cioc || name\n    history.push(`/country/${slugify(alpha2Code)}`);\n  }\n\n  return (\n    <CountryStyled onClick={handleClick}>\n      <img loading=\"lazy\" src={flag} alt=\"\" />\n      <div className=\"details\">\n        <h2>\n          {name}\n          <NativeCallingCode callingCodes={callingCodes} />\n        </h2>\n        {/* <p><strong>AF:</strong> {alpha2Code}</p> */}\n        <p>\n          {/* <strong>Población:</strong> {population} */}\n          <strong>\n            Población:{\" \"}\n            <NumberFormat\n              value={population}\n              displayType={\"text\"}\n              thousandSeparator={true}\n            />\n          </strong>\n        </p>\n        <p>\n          <strong>Region:</strong> {region}\n        </p>\n        <p>\n          <strong>Capital:</strong> {capital}\n        </p>\n      </div>\n    </CountryStyled>\n  );\n}\n\nexport default Country;\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst WrapperStyled = styled.div`\n  max-width: 1312px;\n  margin: auto;\n  padding: 0 1rem;\n`\n\nfunction Wrapper({ children }) {\n  return (\n    <WrapperStyled>\n      {children}\n    </WrapperStyled>\n  )\n}\n\nexport default Wrapper\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Country from \"./country\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Wrapper from \"./wrapper\";\n\nconst CountryListStyled = styled.div`\n  display: grid;\n  grid-row-gap: 2.3em;\n  grid-auto-flow: columns;\n  grid-column-gap: 66px;\n  grid-template-columns: repeat(auto-fill, 270px);\n  background: var(--background);\n  justify-content: center;\n  padding: 3em 0;\n`;\n\nfunction CountryList() {\n  const dispatch = useDispatch();\n\n  const countryListByName = useSelector((state) => state.countryListByName);\n\n  const countryList = useSelector((state) => {\n    if (state.filterByRegion !== \"\" && countryListByName.length === 0) {\n      return state.coutryFilteredByRegion;\n    }\n    if (countryListByName.length > 0) {\n      return countryListByName;\n    }\n\n    return state.countryList;\n  });\n\n  console.log(\"el estado total de mi app es\", countryList);\n\n  useEffect(() => {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((list) => {\n        dispatch({\n          type: \"SET_COUNTRY_LIST\",\n          payload: list,\n        });\n        // setCountryList(data)\n      })\n      .catch(() => {\n        console.log(\"hubo un error, que dolor que dolo que pena\");\n      });\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <CountryListStyled>\n        {countryList.map(\n          ({\n            name,\n            flag,\n            population,\n            capital,\n            region,\n            nativeName,\n            cioc,\n            alpha2Code,\n            callingCodes,\n          }) => {\n            return (\n              <Country\n                flag={flag}\n                name={name}\n                key={name}\n                population={population}\n                region={region}\n                capital={capital}\n                nativeName={nativeName}\n                cioc={cioc}\n                alpha2Code={alpha2Code}\n                callingCodes={callingCodes}\n              />\n            );\n          }\n        )}\n      </CountryListStyled>\n    </Wrapper>\n  );\n}\n\nexport default CountryList;\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst InputStyled = styled.label`\n  display: inline-flex;\n  background: var(--white);\n  align-items: center;\n  box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\n  padding: 0 2rem;\n  border-radius: 5px;\n  flex: 1;\n  i {\n    margin-right: 1em;\n    color: #C4C4C4;\n  }\n  input {\n    /* width: 100%; */\n    flex: 1;\n    border: none;\n    height: 48px;\n    line-height: 48px;\n    font-size: .7em;\n    outline: 0;\n    color: var(--black);\n    background: var(--white);\n    &::-webkit-input-placeholder {\n      color: #C4C4C4;\n    }\n  }\n`\n\nfunction Input({ ...props }) {\n  return (\n    <InputStyled>\n      <i className=\"fas fa-search\"></i>\n      <input type=\"text\" {...props} />\n    </InputStyled>\n  )\n}\n\nexport default Input\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"./input\";\nimport { useDispatch } from \"react-redux\";\n\nconst SearchStyled = styled.div`\n  display: flex;\n  position: relative;\n  .close {\n    position: absolute;\n    right: 1em;\n    top: 1em;\n    border-radius: 50%;\n    border: none;\n    box-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\n  }\n`;\n\nfunction Search() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const filterByName = (e) => {\n    setInputValue(e.target.value);\n    dispatch({\n      type: \"SET_COUNTRY_BY_NAME\",\n      payload: e.target.value,\n    });\n  };\n\n  const clearInput = () => {\n    dispatch({\n      type: \"SET_COUNTRY_BY_NAME\",\n      payload: \"\",\n    });\n    setInputValue(\"\");\n  };\n  return (\n    <SearchStyled>\n      {inputValue && (\n        <i className=\"fas fa-times close\" onClick={clearInput}></i>\n      )}\n      <Input\n        placeholder=\"Search for a country...\"\n        value={inputValue}\n        onChange={filterByName}\n      />\n    </SearchStyled>\n  );\n}\n\nexport default Search;\n","import React, {useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components'\nconst RegionFilterStyled = styled.div`\n@import url('https://fonts.google.com/specimen/Nunito+Sans');\n* {\n    box-sizing: border-box;\n}\n.dropdown {\n  border-radius: 5px;\n  background-color: var(--white);\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.12);\n  cursor: pointer;\n  text-align: center;\n  font-size: 12px;\n  padding: 20px;\n  position: relative;\n  background: var(--white);\n}\n.btn-toggle .fas {\n  display: none;\n}\n\nbody.dark .btn-toggle .fas {\n  display: inline-block;\n}\n\n\n.dropdown .fa-chevron-down {\n  margin-left: 10px;\n}\n\n.dropdown ul {\nborder-radius: 4px;\n  background-color: var(--background-el);\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.12);\n  display: none;\n  padding: 10px;\n  text-align: center;\n  position: absolute;\n  top: 100%;\n  left: 0;\n  list-style-type: none;\n  background: var(--white);\n  width: 100%;\n  z-index: 99;\n}\n\n.dropdown.open ul {\n  display: block;\n}\n\n.dropdown ul li {\n  margin: 10px 0;\n}\n\n`\n\nconst filterByRegionAction = (regionSelected) => {\n  return {\n    type: 'FILTER_BY_REGION',\n    payload: { regionSelected },\n  };\n}\n\nexport const Region = () => {\n  const dispatch = useDispatch();\n  const [dropdown, setdropdown] = useState(false)\n  const filterByRegion = useSelector((state) => state.filterByRegion);\n\n  const onRegionChange = (selectEvent) => {\n\n    dispatch(filterByRegionAction(selectEvent));\n  }\n\n  return (\n    <>\n    <RegionFilterStyled>\n\n    <div className={`${dropdown?'dropdown open':'dropdown'}`} onClick={()=> setdropdown(!dropdown)} id=\"filter\">\n          Filter by Region\n          <i className=\"fas fa-chevron-down\"></i>\n          <ul>\n            <li onClick={()=>onRegionChange('Africa')}>Africa</li>\n            <li onClick={()=>onRegionChange('Americas')}>Americas</li>\n            <li onClick={()=>onRegionChange('Asia')}>Asia</li>\n            <li onClick={()=>onRegionChange('Europe')}>Europe</li>\n            <li onClick={()=>onRegionChange('Oceania')}>Oceania</li>\n          </ul>\n        </div>\n    </RegionFilterStyled>\n    </>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\nimport Search from './search'\nimport { Region as FilterByRegion } from './Region'\nimport Wrapper from './wrapper'\n\nconst ActionListStyled = styled.div`\n  .grid {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-row-gap: 20px;\n  }\n  @media screen and (min-width: 768px) {\n    .grid {\n      grid-template-columns: 480px 1fr 164px;\n    }\n  }\n`\n\nfunction ActionList() {\n  return (\n    <ActionListStyled>\n      <Wrapper>\n        <div className=\"grid\">\n          <Search />\n          <span></span>\n          <FilterByRegion />\n        </div>\n      </Wrapper>\n    </ActionListStyled>\n  )\n}\n\nexport default ActionList\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Wrapper from \"./wrapper\";\nimport { Link } from \"react-router-dom\";\n\nconst HeaderStyled = styled.div`\n  background: var(--white);\n  margin-bottom: 1em;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.06);\n  .content {\n    height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  h1 {\n    font-size: 14px;\n  }\n  a {\n    text-decoration: none;\n    color: var(--dark);\n  }\n  .dark-mode {\n    cursor: pointer;\n    .moon {\n      transform: rotate(-25deg);\n      display: inline-flex;\n      margin-right: 10px;\n    }\n    p {\n      font-size: 12px;\n      font-weight: 600;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 3em;\n    h1 {\n      font-size: 24px;\n    }\n    p {\n      font-size: 1rem;\n    }\n  }\n`;\n\nfunction Header({ setDarkMode, darkMode }) {\n  function handleClick() {\n    setDarkMode(!darkMode);\n  }\n\n  return (\n    <HeaderStyled>\n      <Wrapper>\n        <div className=\"content\">\n          <Link to=\"/\">\n            <h1>Worlds</h1>\n          </Link>\n          <div className=\"dark-mode\">\n            <p onClick={handleClick}>\n              <span className=\"moon\">\n                {darkMode ? (\n                  <i className=\"fas fa-moon\"></i>\n                ) : (\n                  <i className=\"far fa-moon\"></i>\n                )}\n              </span>\n              Dark Mode\n            </p>\n          </div>\n        </div>\n      </Wrapper>\n    </HeaderStyled>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CountrySelectedStyled = styled.div`\n  margin-top: 3em;\n  padding-bottom: 3em;\n  img {\n    width: 100%;\n    margin-bottom: 2em;\n  }\n  .grid {\n    display: grid;\n    grid-row-gap: 1em;\n  }\n  .border-item {\n    padding: 0.5em 2em;\n    border-radius: 5px;\n    margin-right: 15px;\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n    display: inline-flex;\n    margin-bottom: 15px;\n    background: var(--white);\n  }\n  .languages {\n    span {\n      margin-right: 5px;\n      &:after {\n        content: \",\";\n      }\n      &:last-child {\n        &:after {\n          display: none;\n        }\n      }\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 120px;\n    margin-top: 5em;\n    .grid {\n      grid-template-columns: 1fr 1fr;\n    }\n    .borders {\n      display: inline-flex;\n      margin-right: 1em;\n      margin-top: 3.5em;\n    }\n  }\n`;\n\nfunction CountrySelected({\n  flag,\n  name,\n  nativeName,\n  population,\n  region,\n  subregion,\n  capital,\n  topLevelDomain,\n  currencies = [],\n  languages = [],\n  borders = [],\n  alpha2Code,\n}) {\n  return (\n    <CountrySelectedStyled>\n      <img src={flag} alt=\"\" />\n      <div>\n        <h2>{name}</h2>\n        <div className=\"grid\">\n          <div>\n            <p>\n              <strong>Native Name:</strong> {nativeName}\n            </p>\n            <p>\n              <strong>Population:</strong> {population}\n            </p>\n            <p>\n              <strong>Region:</strong> {region}\n            </p>\n            <p>\n              <strong>Sub Region:</strong> {subregion}\n            </p>\n            <p>\n              <strong>Capital:</strong> {capital}\n            </p>\n          </div>\n          <div>\n            <p>\n              <strong>Top Level Domain:</strong> {topLevelDomain}\n            </p>\n            <p>\n              <strong>Currencies:</strong>{\" \"}\n              {currencies.map((item) => (\n                <span key={item.name}>{item.name}</span>\n              ))}\n            </p>\n            <p className=\"languages\">\n              <strong>Languages:</strong>{\" \"}\n              {languages.map((item) => (\n                <span key={item.name}>{item.name}</span>\n              ))}\n            </p>\n          </div>\n        </div>\n        <p className=\"borders\">\n          <strong>Junto a paises:</strong>\n        </p>\n        {borders.map((item) => (\n          <span key={item.toString()} className=\"border-item\">\n            {item}\n          </span>\n        ))}\n      </div>\n    </CountrySelectedStyled>\n  );\n}\n\nexport default CountrySelected;\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Wrapper from './wrapper'\nimport { useSelector } from 'react-redux'\nimport CountrySelected from './country-selected'\n\nconst CountryPageStyled = styled.div`\n  .back {\n    background: var(--white);\n    box-shadow: 0 0 5px rgba(0,0,0,.3);\n    padding: .7em 2.2em;\n    border-radius: 5px;\n    border: none;\n    cursor: pointer;\n    margin-top: 1em;\n    color: var(--black);\n    i {\n      margin-right: 5px;\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    .back {\n      margin-top: 3em;\n    }\n  }\n`\n\nfunction CountryPage({ match, history }) {\n  let DBcountry = useSelector(state => state.countryList.find(item => item.alpha2Code === match.params.id))\n  const [country, setCountry] = useState(DBcountry)\n  useEffect(() => {\n\n    if (!country) {\n      fetch(`https://restcountries.eu/rest/v2/alpha/${match.params.id.toLowerCase()}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setCountry(data)\n        })\n    }\n  }, [country, match.params.id])\n\n  function handleClick() {\n    history.goBack()\n  }\n  return (\n    <CountryPageStyled>\n      <Wrapper>\n        <button className=\"back\" onClick={handleClick}><i className=\"fas fa-long-arrow-alt-left\"></i> Back</button>\n        <CountrySelected {...country} />\n      </Wrapper>\n    </CountryPageStyled>\n  )\n}\n\nexport default CountryPage\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport CountryList from \"./country-list\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducer\";\nimport ActionList from \"./action-list\";\nimport Header from \"./header\";\nimport CountryPage from \"./country-page\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst initialState = {\n  countryList: [],\n  countryListByName: [],\n  coutryFilteredByRegion: [],\n  filterByRegion: \"\",\n};\n\nconst store = createStore(reducer, initialState);\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const mainClass = darkMode ? \"is-dark-mode\" : \"is-light-mode\";\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    mq.addListener(changeMedia);\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n    return () => {\n      mq.removeListener(changeMedia);\n    };\n  }, []);\n  return (\n    <main className={mainClass}>\n      <Provider store={store}>\n        <Router>\n          <Header setDarkMode={setDarkMode} darkMode={darkMode} />\n          <Switch>\n            <Route path=\"/country/:id\" component={CountryPage} />\n            <Route path=\"/\">\n              <ActionList />\n              <CountryList />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </main>\n  );\n}\n\nexport default App;\n","export default function reducer(state, action) {\n  switch (action.type) {\n    case \"SET_COUNTRY_LIST\": {\n      // console.log(\"voy a actualizar la lista de paises\");\n      return { ...state, countryList: action.payload };\n    }\n\n    case \"SET_COUNTRY_BY_NAME\": {\n      let list;\n      if (state.filterByRegion !== \"\") {\n        list = state.coutryFilteredByRegion;\n      } else {\n        list = state.countryList;\n      }\n      const countryListByName = list.filter((country) =>\n        country.name.toLowerCase().includes(action.payload.toLowerCase())\n      );\n      return { ...state, countryListByName };\n    }\n\n    case \"FILTER_BY_REGION\": {\n      const { regionSelected } = action.payload;\n\n      if (\"\" === regionSelected) {\n        return { ...state, coutryFilteredByRegion: [], filterByRegion: \"\" };\n      }\n\n      const coutryFilteredByRegion = state.countryList.filter(\n        (country) => country.region === regionSelected\n      );\n\n      return {\n        ...state,\n        coutryFilteredByRegion,\n        filterByRegion: regionSelected,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}